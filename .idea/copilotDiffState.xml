<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/App.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/App.java" />
              <option name="originalContent" value="import Model.*;&#10;&#10;import java.time.LocalDate;&#10;&#10;public class App {&#10;    public static void main(String[] args) {&#10;&#10;&#10;        Dog dog2 = new Dog();&#10;        dog2.setName(&quot;Bobitză&quot;);&#10;        dog2.setAge(3);&#10;        dog2.setHealthLevel(9);&#10;        dog2.setHungerLevel(1);&#10;        dog2.setMoodLevel(8);&#10;        dog2.setFavouriteFood(&quot;meat&quot;);&#10;        dog2.setFavouriteRecreationalActivity(&quot;running&quot;);&#10;        dog2.setBreed(&quot;Labrador&quot;);&#10;        dog2.setSize(&quot;Large&quot;);&#10;        System.out.println(dog2);&#10;&#10;        Cat cat2 = new Cat();&#10;        cat2.setName(&quot;Miau&quot;);&#10;        cat2.setAge(2);&#10;        cat2.setHealthLevel(10);&#10;        cat2.setHungerLevel(1);&#10;        cat2.setMoodLevel(9);&#10;        cat2.setFavouriteFood(&quot;fish&quot;);&#10;        cat2.setFavouriteRecreationalActivity(&quot;climbing&quot;);&#10;        cat2.setBreed(&quot;orange&quot;);&#10;        cat2.setSize(&quot;Fat&quot;);&#10;        System.out.println(cat2);&#10;&#10;        Bird bird2 = new Bird();&#10;        bird2.setName(&quot;Giani&quot;);&#10;        bird2.setAge(1);&#10;        bird2.setHealthLevel(8);&#10;        bird2.setHungerLevel(2);&#10;        bird2.setMoodLevel(7);&#10;        bird2.setFavouriteFood(&quot;seeds&quot;);&#10;        bird2.setFavouriteRecreationalActivity(&quot;flying&quot;);&#10;        bird2.setSpecies(&quot;Parrot&quot;);&#10;        bird2.setWingSpan(30);&#10;        System.out.println(bird2);&#10;&#10;        Duck duck2 = new Duck();&#10;        duck2.setName(&quot;Șobo&quot;);&#10;        duck2.setAge(1);&#10;        duck2.setHealthLevel(8);&#10;        duck2.setHungerLevel(2);&#10;        duck2.setMoodLevel(7);&#10;        duck2.setFavouriteFood(&quot;worms&quot;);&#10;        duck2.setFavouriteRecreationalActivity(&quot;swimming&quot;);&#10;        duck2.setSpecies(&quot;White&quot;);&#10;        duck2.setWingSpan(25);&#10;        duck2.setSpeed(15);&#10;        System.out.println(duck2);&#10;&#10;        CannedFood cannedFood = new CannedFood();&#10;        cannedFood.setName(&quot;Canned Meat&quot;);&#10;        cannedFood.setPrice(30);&#10;        cannedFood.setQuantity(50);&#10;        cannedFood.setExpirationDate(LocalDate.of(2025, 12, 31));&#10;        cannedFood.setAvailableInStock(true);&#10;        cannedFood.setCanSize(&quot;Large&quot;);&#10;        System.out.println(cannedFood);&#10;&#10;        DryFood dryFood = new DryFood();&#10;        dryFood.setName(&quot;Dry Kibble&quot;);&#10;        dryFood.setPrice(25);&#10;        dryFood.setQuantity(100);&#10;        dryFood.setExpirationDate(LocalDate.of(2026, 1, 15));&#10;        dryFood.setAvailableInStock(true);&#10;        dryFood.setBagSize(&quot;Small&quot;);&#10;        dryFood.setFlavour(&quot;Chicken&quot;);&#10;        System.out.println(dryFood);&#10;&#10;        IndoorRecreationalActivity indoorRecreationalActivity = new IndoorRecreationalActivity();&#10;        indoorRecreationalActivity.setName(&quot;Massage&quot;);&#10;        indoorRecreationalActivity.setEquipmentNeeded(&quot;Massage Table&quot;);&#10;        System.out.println(indoorRecreationalActivity);&#10;&#10;        OutdoorRecreationalActivity outdoorRecreationalActivity = new OutdoorRecreationalActivity();&#10;        outdoorRecreationalActivity.setName(&quot;Running&quot;);&#10;        outdoorRecreationalActivity.setLocation(&quot;Park&quot;);&#10;        System.out.println(outdoorRecreationalActivity);&#10;&#10;        Manager manager = new Manager();&#10;        manager.setName(&quot;Maria&quot;);&#10;        manager.setSalary(8000);&#10;        manager.setDepartment(&quot;Dogs and Cats&quot;);&#10;        System.out.println(manager);&#10;&#10;        CareTaker careTaker = new CareTaker();&#10;        careTaker.setName(&quot;Ionel&quot;);&#10;        careTaker.setSalary(4000);&#10;        careTaker.setShift(&quot;Morning&quot;);&#10;        System.out.println(careTaker);&#10;&#10;&#10;&#10;        cat2.sound();&#10;        dog2.sound();&#10;        bird2.sound();&#10;        duck2.sound();&#10;&#10;&#10;    }&#10;}" />
              <option name="updatedContent" value="import Model.*;&#10;&#10;import java.time.LocalDate;&#10;&#10;public class App {&#10;    public static void main(String[] args) {&#10;&#10;&#10;        Dog dog2 = new Dog();&#10;        dog2.setName(&quot;Bobitză&quot;);&#10;        dog2.setAge(3);&#10;        dog2.setHealthLevel(9);&#10;        dog2.setHungerLevel(1);&#10;        dog2.setMoodLevel(8);&#10;        dog2.setFavouriteFood(&quot;meat&quot;);&#10;        dog2.setFavouriteRecreationalActivity(&quot;running&quot;);&#10;        dog2.setBreed(&quot;Labrador&quot;);&#10;        dog2.setSize(&quot;Large&quot;);&#10;        System.out.println(dog2);&#10;&#10;        Cat cat2 = new Cat();&#10;        cat2.setName(&quot;Miau&quot;);&#10;        cat2.setAge(2);&#10;        cat2.setHealthLevel(10);&#10;        cat2.setHungerLevel(1);&#10;        cat2.setMoodLevel(9);&#10;        cat2.setFavouriteFood(&quot;fish&quot;);&#10;        cat2.setFavouriteRecreationalActivity(&quot;climbing&quot;);&#10;        cat2.setBreed(&quot;orange&quot;);&#10;        cat2.setSize(&quot;Fat&quot;);&#10;        System.out.println(cat2);&#10;&#10;        Bird bird2 = new Bird();&#10;        bird2.setName(&quot;Giani&quot;);&#10;        bird2.setAge(1);&#10;        bird2.setHealthLevel(8);&#10;        bird2.setHungerLevel(2);&#10;        bird2.setMoodLevel(7);&#10;        bird2.setFavouriteFood(&quot;seeds&quot;);&#10;        bird2.setFavouriteRecreationalActivity(&quot;flying&quot;);&#10;        bird2.setSpecies(&quot;Parrot&quot;);&#10;        bird2.setWingSpan(30);&#10;        System.out.println(bird2);&#10;&#10;        Duck duck2 = new Duck();&#10;        duck2.setName(&quot;Șobo&quot;);&#10;        duck2.setAge(1);&#10;        duck2.setHealthLevel(8);&#10;        duck2.setHungerLevel(2);&#10;        duck2.setMoodLevel(7);&#10;        duck2.setFavouriteFood(&quot;worms&quot;);&#10;        duck2.setFavouriteRecreationalActivity(&quot;swimming&quot;);&#10;        duck2.setSpecies(&quot;White&quot;);&#10;        duck2.setWingSpan(25);&#10;        duck2.setSpeed(15);&#10;        System.out.println(duck2);&#10;&#10;        CannedFood cannedFood = new CannedFood();&#10;        cannedFood.setName(&quot;Canned Meat&quot;);&#10;        cannedFood.setPrice(30);&#10;        cannedFood.setQuantity(50);&#10;        cannedFood.setExpirationDate(LocalDate.of(2025, 12, 31));&#10;        cannedFood.setAvailableInStock(true);&#10;        cannedFood.setCanSize(&quot;Large&quot;);&#10;        System.out.println(cannedFood);&#10;&#10;        DryFood dryFood = new DryFood();&#10;        dryFood.setName(&quot;Dry Kibble&quot;);&#10;        dryFood.setPrice(25);&#10;        dryFood.setQuantity(100);&#10;        dryFood.setExpirationDate(LocalDate.of(2026, 1, 15));&#10;        dryFood.setAvailableInStock(true);&#10;        dryFood.setBagSize(&quot;Small&quot;);&#10;        dryFood.setFlavour(&quot;Chicken&quot;);&#10;        System.out.println(dryFood);&#10;&#10;        IndoorRecreationalActivity indoorRecreationalActivity = new IndoorRecreationalActivity();&#10;        indoorRecreationalActivity.setName(&quot;Massage&quot;);&#10;        indoorRecreationalActivity.setEquipmentNeeded(&quot;Massage Table&quot;);&#10;        System.out.println(indoorRecreationalActivity);&#10;&#10;        OutdoorRecreationalActivity outdoorRecreationalActivity = new OutdoorRecreationalActivity();&#10;        outdoorRecreationalActivity.setName(&quot;Running&quot;);&#10;        outdoorRecreationalActivity.setLocation(&quot;Park&quot;);&#10;        System.out.println(outdoorRecreationalActivity);&#10;&#10;        Manager manager = new Manager();&#10;        manager.setName(&quot;Maria&quot;);&#10;        manager.setSalary(8000);&#10;        manager.setDepartment(&quot;Dogs and Cats&quot;);&#10;        System.out.println(manager);&#10;&#10;        CareTaker careTaker = new CareTaker();&#10;        careTaker.setName(&quot;Ionel&quot;);&#10;        careTaker.setSalary(4000);&#10;        careTaker.setShift(&quot;Morning&quot;);&#10;        System.out.println(careTaker);&#10;&#10;&#10;&#10;        cat2.sound();&#10;        dog2.sound();&#10;        bird2.sound();&#10;        duck2.sound();&#10;&#10;        System.out.println(&quot;=== TESTING NEW COMPLEX DATA TYPE METHODS ===\n&quot;);&#10;&#10;        System.out.println(&quot;--- Testing Dog feeding with CannedFood ---&quot;);&#10;        System.out.println(&quot;Dog initial stats:&quot;);&#10;        System.out.println(&quot;Hunger: &quot; + dog2.getHungerLevel() + &quot;, Mood: &quot; + dog2.getMoodLevel() + &quot;, Weight: &quot; + dog2.getWeight());&#10;&#10;        CannedFood meatFood = new CannedFood();&#10;        meatFood.setName(&quot;Premium Meat&quot;);&#10;        meatFood.setPrice(35);&#10;        meatFood.setQuantity(20);&#10;        meatFood.setExpirationDate(LocalDate.of(2025, 10, 15));&#10;        meatFood.setAvailableInStock(true);&#10;        meatFood.setCanSize(&quot;Large&quot;);&#10;        meatFood.setFlavour(&quot;beef meat&quot;);&#10;&#10;        dog2.feedWithFood(meatFood);&#10;        System.out.println(&quot;After feeding - Hunger: &quot; + dog2.getHungerLevel() + &quot;, Mood: &quot; + dog2.getMoodLevel() + &quot;, Weight: &quot; + dog2.getWeight());&#10;        System.out.println();&#10;&#10;        System.out.println(&quot;--- Testing Cat grooming with CareTaker ---&quot;);&#10;        System.out.println(&quot;Cat initial stats:&quot;);&#10;        System.out.println(&quot;Mood: &quot; + cat2.getMoodLevel() + &quot;, Health: &quot; + cat2.getHealthLevel());&#10;&#10;        cat2.receiveGrooming(careTaker);&#10;        System.out.println(&quot;After grooming - Mood: &quot; + cat2.getMoodLevel() + &quot;, Health: &quot; + cat2.getHealthLevel());&#10;        System.out.println();&#10;&#10;        System.out.println(&quot;--- Testing Bird eating seeds with DryFood ---&quot;);&#10;        System.out.println(&quot;Bird initial stats:&quot;);&#10;        System.out.println(&quot;Hunger: &quot; + bird2.getHungerLevel() + &quot;, Health: &quot; + bird2.getHealthLevel() + &quot;, Weight: &quot; + bird2.getWeight());&#10;&#10;        DryFood seeds = new DryFood();&#10;        seeds.setName(&quot;Mixed Seeds&quot;);&#10;        seeds.setPrice(15);&#10;        seeds.setQuantity(50);&#10;        seeds.setExpirationDate(LocalDate.of(2026, 3, 20));&#10;        seeds.setAvailableInStock(true);&#10;        seeds.setBagSize(&quot;Small&quot;);&#10;        seeds.setFlavour(&quot;Sunflower&quot;);&#10;&#10;        bird2.eatSeeds(seeds);&#10;        System.out.println(&quot;After eating seeds - Hunger: &quot; + bird2.getHungerLevel() + &quot;, Health: &quot; + bird2.getHealthLevel() + &quot;, Weight: &quot; + bird2.getWeight());&#10;        System.out.println();&#10;&#10;        System.out.println(&quot;--- Testing Duck swimming activity ---&quot;);&#10;        System.out.println(&quot;Duck initial stats:&quot;);&#10;        System.out.println(&quot;Mood: &quot; + duck2.getMoodLevel() + &quot;, Health: &quot; + duck2.getHealthLevel() + &quot;, Hunger: &quot; + duck2.getHungerLevel());&#10;&#10;        OutdoorRecreationalActivity swimming = new OutdoorRecreationalActivity();&#10;        swimming.setName(&quot;Swimming&quot;);&#10;        swimming.setLocation(&quot;Lake with water&quot;);&#10;&#10;        duck2.performSwimming(swimming);&#10;        System.out.println(&quot;After water swimming - Mood: &quot; + duck2.getMoodLevel() + &quot;, Health: &quot; + duck2.getHealthLevel() + &quot;, Hunger: &quot; + duck2.getHungerLevel());&#10;&#10;        OutdoorRecreationalActivity landActivity = new OutdoorRecreationalActivity();&#10;        landActivity.setName(&quot;Walking&quot;);&#10;        landActivity.setLocation(&quot;Dry park&quot;);&#10;&#10;        duck2.performSwimming(landActivity);&#10;        System.out.println(&quot;After land activity - Mood: &quot; + duck2.getMoodLevel() + &quot;, Health: &quot; + duck2.getHealthLevel() + &quot;, Hunger: &quot; + duck2.getHungerLevel());&#10;        System.out.println();&#10;&#10;        System.out.println(&quot;=== FINAL ANIMAL STATES ===&quot;);&#10;        System.out.println(dog2);&#10;        System.out.println(cat2);&#10;        System.out.println(bird2);&#10;        System.out.println(duck2);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/Model/Bird.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/Model/Bird.java" />
              <option name="originalContent" value="package Model;&#10;&#10;public class Bird extends Animal {&#10;    private String species;&#10;    private float wingSpan;&#10;&#10;    public Bird() {&#10;    }&#10;&#10;    public Bird(String name, int age, int healthLevel, int hungerLevel, int moodLevel, String favouriteFood,&#10;                String favouriteRecreationalActivity, String species, float wingSpan) {&#10;        super(name, age, healthLevel, hungerLevel, moodLevel, favouriteFood, favouriteRecreationalActivity);&#10;        this.species = species;&#10;        this.wingSpan = wingSpan;&#10;    }&#10;&#10;    public String getSpecies() {&#10;        return species;&#10;    }&#10;&#10;    public void setSpecies(String species) {&#10;        this.species = species;&#10;    }&#10;&#10;    public float getWingSpan() {&#10;        return wingSpan;&#10;    }&#10;&#10;    public void setWingSpan(float wingSpan) {&#10;        this.wingSpan = wingSpan;&#10;    }&#10;&#10;    @Override&#10;    public void sound() {&#10;        System.out.println(&quot;*Gibberish bird sound*&quot;);&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Bird:  &quot; + &quot;\n\n&quot; +&#10;                super.toString() +&#10;                &quot;species  =  &quot; + species + '\n' +&#10;                &quot;wingSpan  =  &quot; + wingSpan + &quot;\n\n&quot;;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package Model;&#10;&#10;public class Bird extends Animal {&#10;    private String species;&#10;    private float wingSpan;&#10;    private double weight;&#10;&#10;    public Bird() {&#10;    }&#10;&#10;    public Bird(String name, int age, int healthLevel, int hungerLevel, int moodLevel, String favouriteFood,&#10;                String favouriteRecreationalActivity, String species, float wingSpan) {&#10;        super(name, age, healthLevel, hungerLevel, moodLevel, favouriteFood, favouriteRecreationalActivity);&#10;        this.species = species;&#10;        this.wingSpan = wingSpan;&#10;        this.weight = 0.5;&#10;    }&#10;&#10;    public String getSpecies() {&#10;        return species;&#10;    }&#10;&#10;    public void setSpecies(String species) {&#10;        this.species = species;&#10;    }&#10;&#10;    public float getWingSpan() {&#10;        return wingSpan;&#10;    }&#10;&#10;    public void setWingSpan(float wingSpan) {&#10;        this.wingSpan = wingSpan;&#10;    }&#10;&#10;    public double getWeight() {&#10;        return weight;&#10;    }&#10;&#10;    public void setWeight(double weight) {&#10;        this.weight = weight;&#10;    }&#10;&#10;    public void eatSeeds(DryFood dryFood) {&#10;        if (dryFood == null || !dryFood.isAvailableInStock()) {&#10;            return;&#10;        }&#10;&#10;        int newHungerLevel = Math.max(0, getHungerLevel() - 3);&#10;        setHungerLevel(newHungerLevel);&#10;&#10;        int newHealthLevel = Math.min(10, getHealthLevel() + 1);&#10;        setHealthLevel(newHealthLevel);&#10;&#10;        this.weight += 0.02;&#10;    }&#10;&#10;    @Override&#10;    public void sound() {&#10;        System.out.println(&quot;*Gibberish bird sound*&quot;);&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Bird:  &quot; + &quot;\n\n&quot; +&#10;                super.toString() +&#10;                &quot;species  =  &quot; + species + '\n' +&#10;                &quot;wingSpan  =  &quot; + wingSpan + '\n' +&#10;                &quot;weight  =  &quot; + String.format(&quot;%.2f&quot;, weight) + &quot; kg\n\n&quot;;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/Model/Cat.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/Model/Cat.java" />
              <option name="originalContent" value="package Model;&#10;&#10;public class Cat extends Animal {&#10;    private String breed;&#10;    private String size;&#10;&#10;    public Cat() {&#10;    }&#10;&#10;    public Cat(String name, int age, int healthLevel, int hungerLevel, int moodLevel, String favouriteFood,&#10;               String favouriteRecreationalActivity, String breed, String size) {&#10;        super(name, age, healthLevel, hungerLevel, moodLevel, favouriteFood, favouriteRecreationalActivity);&#10;        this.breed = breed;&#10;        this.size = size;&#10;    }&#10;&#10;    public String getBreed() {&#10;        return breed;&#10;    }&#10;&#10;    public void setBreed(String breed) {&#10;        this.breed = breed;&#10;    }&#10;&#10;    public String getSize() {&#10;        return size;&#10;    }&#10;&#10;    public void setSize(String size) {&#10;        this.size = size;&#10;    }&#10;&#10;    @Override&#10;    public void sound(){&#10;        System.out.println(&quot;*Meoowww&quot;);&#10;    }&#10;&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Cat:  &quot; + &quot;\n\n&quot; +&#10;                super.toString() +&#10;                &quot;breed  =  &quot; + breed + '\n' +&#10;                &quot;size  =  &quot; + size + &quot;\n\n&quot;;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package Model;&#10;&#10;public class Cat extends Animal {&#10;    private String breed;&#10;    private String size;&#10;    private double weight;&#10;&#10;    public Cat() {&#10;    }&#10;&#10;    public Cat(String name, int age, int healthLevel, int hungerLevel, int moodLevel, String favouriteFood,&#10;               String favouriteRecreationalActivity, String breed, String size) {&#10;        super(name, age, healthLevel, hungerLevel, moodLevel, favouriteFood, favouriteRecreationalActivity);&#10;        this.breed = breed;&#10;        this.size = size;&#10;        this.weight = 3.5;&#10;    }&#10;&#10;    public String getBreed() {&#10;        return breed;&#10;    }&#10;&#10;    public void setBreed(String breed) {&#10;        this.breed = breed;&#10;    }&#10;&#10;    public String getSize() {&#10;        return size;&#10;    }&#10;&#10;    public void setSize(String size) {&#10;        this.size = size;&#10;    }&#10;&#10;    public double getWeight() {&#10;        return weight;&#10;    }&#10;&#10;    public void setWeight(double weight) {&#10;        this.weight = weight;&#10;    }&#10;&#10;    public void receiveGrooming(CareTaker careTaker) {&#10;        if (careTaker == null) {&#10;            return;&#10;        }&#10;&#10;        int newMoodLevel = Math.min(10, getMoodLevel() + 3);&#10;        setMoodLevel(newMoodLevel);&#10;&#10;        int newHealthLevel = Math.min(10, getHealthLevel() + 1);&#10;        setHealthLevel(newHealthLevel);&#10;    }&#10;&#10;    @Override&#10;    public void sound() {&#10;        System.out.println(&quot;*Meoowww&quot;);&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Cat:  &quot; + &quot;\n\n&quot; +&#10;                super.toString() +&#10;                &quot;breed  =  &quot; + breed + '\n' +&#10;                &quot;size  =  &quot; + size + '\n' +&#10;                &quot;weight  =  &quot; + String.format(&quot;%.1f&quot;, weight) + &quot; kg\n\n&quot;;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/Model/CatFood.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/Model/CatFood.java" />
              <option name="updatedContent" value="package Model;&#10;&#10;import java.time.LocalDate;&#10;&#10;public class CatFood extends AnimalFood {&#10;    private String fishType;&#10;    private boolean hasTaurine;&#10;    private double fatPercentage;&#10;    private boolean isForKittens;&#10;&#10;    public CatFood() {&#10;    }&#10;&#10;    public CatFood(String name, double price, int quantity, LocalDate expirationDate, &#10;                   boolean availableInStock, String fishType, boolean hasTaurine, &#10;                   double fatPercentage, boolean isForKittens) {&#10;        super(name, price, quantity, expirationDate, availableInStock);&#10;        this.fishType = fishType;&#10;        this.hasTaurine = hasTaurine;&#10;        this.fatPercentage = fatPercentage;&#10;        this.isForKittens = isForKittens;&#10;    }&#10;&#10;    public String getFishType() {&#10;        return fishType;&#10;    }&#10;&#10;    public void setFishType(String fishType) {&#10;        this.fishType = fishType;&#10;    }&#10;&#10;    public boolean isHasTaurine() {&#10;        return hasTaurine;&#10;    }&#10;&#10;    public void setHasTaurine(boolean hasTaurine) {&#10;        this.hasTaurine = hasTaurine;&#10;    }&#10;&#10;    public double getFatPercentage() {&#10;        return fatPercentage;&#10;    }&#10;&#10;    public void setFatPercentage(double fatPercentage) {&#10;        this.fatPercentage = fatPercentage;&#10;    }&#10;&#10;    public boolean isForKittens() {&#10;        return isForKittens;&#10;    }&#10;&#10;    public void setForKittens(boolean forKittens) {&#10;        isForKittens = forKittens;&#10;    }&#10;&#10;    @Override&#10;    public void description() {&#10;        System.out.println(&quot;*This is specialized cat food with &quot; + fishType + &quot; fish*&quot;);&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;CatFood: &quot; + &quot;\n\n&quot; +&#10;                super.toString() +&#10;                &quot;fishType = &quot; + fishType + '\n' +&#10;                &quot;hasTaurine = &quot; + hasTaurine + '\n' +&#10;                &quot;fatPercentage = &quot; + fatPercentage + &quot;%\n&quot; +&#10;                &quot;isForKittens = &quot; + isForKittens + &quot;\n\n&quot;;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/Model/Dog.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/Model/Dog.java" />
              <option name="originalContent" value="package Model;&#10;&#10;public class Dog extends Animal{&#10;    private String breed;&#10;    private String size;&#10;&#10;    public Dog() {&#10;    }&#10;&#10;    public Dog(String name, int age, int healthLevel, int hungerLevel, int moodLevel, String favouriteFood,&#10;               String favouriteRecreationalActivity, String breed, String size) {&#10;        super(name, age, healthLevel, hungerLevel, moodLevel, favouriteFood, favouriteRecreationalActivity);&#10;        this.breed = breed;&#10;        this.size = size;&#10;    }&#10;&#10;    public String getBreed() {&#10;        return breed;&#10;    }&#10;&#10;    public void setBreed(String breed) {&#10;        this.breed = breed;&#10;    }&#10;&#10;    public String getSize() {&#10;        return size;&#10;    }&#10;&#10;    public void setSize(String size) {&#10;        this.size = size;&#10;    }&#10;&#10;    @Override&#10;    public void sound() {&#10;        System.out.println(&quot;*Woof Woof*&quot;);&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Dog:  &quot; + &quot;\n\n&quot; +&#10;                super.toString() +&#10;                &quot;breed  =  &quot; + breed + '\n' +&#10;                &quot;size  =  &quot; + size + &quot;\n\n&quot;;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package Model;&#10;&#10;public class Dog extends Animal{&#10;    private String breed;&#10;    private String size;&#10;    private double weight;&#10;&#10;    public Dog() {&#10;    }&#10;&#10;    public Dog(String name, int age, int healthLevel, int hungerLevel, int moodLevel, String favouriteFood,&#10;               String favouriteRecreationalActivity, String breed, String size) {&#10;        super(name, age, healthLevel, hungerLevel, moodLevel, favouriteFood, favouriteRecreationalActivity);&#10;        this.breed = breed;&#10;        this.size = size;&#10;        this.weight = 5.0;&#10;    }&#10;&#10;    public String getBreed() {&#10;        return breed;&#10;    }&#10;&#10;    public void setBreed(String breed) {&#10;        this.breed = breed;&#10;    }&#10;&#10;    public String getSize() {&#10;        return size;&#10;    }&#10;&#10;    public void setSize(String size) {&#10;        this.size = size;&#10;    }&#10;&#10;    public double getWeight() {&#10;        return weight;&#10;    }&#10;&#10;    public void setWeight(double weight) {&#10;        this.weight = weight;&#10;    }&#10;&#10;    public void feedWithFood(CannedFood cannedFood) {&#10;        if (cannedFood == null || !cannedFood.isAvailableInStock()) {&#10;            return;&#10;        }&#10;&#10;        int newHungerLevel = Math.max(0, getHungerLevel() - 4);&#10;        setHungerLevel(newHungerLevel);&#10;&#10;        int newMoodLevel = Math.min(10, getMoodLevel() + 2);&#10;        setMoodLevel(newMoodLevel);&#10;&#10;        if (&quot;Large&quot;.equals(cannedFood.getCanSize())) {&#10;            this.weight += 0.2;&#10;        } else {&#10;            this.weight += 0.1;&#10;        }&#10;&#10;        if (cannedFood.getFlavour() != null &amp;&amp; &#10;            cannedFood.getFlavour().toLowerCase().contains(getFavouriteFood().toLowerCase())) {&#10;            setMoodLevel(Math.min(10, getMoodLevel() + 1));&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void sound() {&#10;        System.out.println(&quot;*Woof Woof*&quot;);&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Dog:  &quot; + &quot;\n\n&quot; +&#10;                super.toString() +&#10;                &quot;breed  =  &quot; + breed + '\n' +&#10;                &quot;size  =  &quot; + size + '\n' +&#10;                &quot;weight  =  &quot; + String.format(&quot;%.1f&quot;, weight) + &quot; kg\n\n&quot;;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/Model/DogFood.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/Model/DogFood.java" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/Model/Duck.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/Model/Duck.java" />
              <option name="originalContent" value="package Model;&#10;&#10;public class Duck extends Bird {&#10;    private int speed;&#10;&#10;    public Duck() {&#10;    }&#10;    public Duck(String name, int age, int healthLevel, int hungerLevel, int moodLevel, String favouriteFood,&#10;                String favouriteRecreationalActivity, String species, float wingSpan, int speed) {&#10;        super(name, age, healthLevel, hungerLevel, moodLevel, favouriteFood, favouriteRecreationalActivity, species, wingSpan);&#10;        this.speed = speed;&#10;    }&#10;&#10;    public int getSpeed() {&#10;        return speed;&#10;    }&#10;&#10;    public void setSpeed(int speed) {&#10;        this.speed = speed;&#10;    }&#10;&#10;    @Override&#10;    public void sound() {&#10;        System.out.println(&quot;*Quack Quack*&quot;);&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Duck:  &quot; + &quot;\n\n&quot; +&#10;                super.toString() +&#10;                &quot;speed  =  &quot; + speed + &quot; km/h\n\n&quot;;&#10;    }&#10;&#10;&#10;}&#10;" />
              <option name="updatedContent" value="package Model;&#10;&#10;public class Duck extends Bird {&#10;    private int speed;&#10;&#10;    public Duck() {&#10;    }&#10;    public Duck(String name, int age, int healthLevel, int hungerLevel, int moodLevel, String favouriteFood,&#10;                String favouriteRecreationalActivity, String species, float wingSpan, int speed) {&#10;        super(name, age, healthLevel, hungerLevel, moodLevel, favouriteFood, favouriteRecreationalActivity, species, wingSpan);&#10;        this.speed = speed;&#10;    }&#10;&#10;    public int getSpeed() {&#10;        return speed;&#10;    }&#10;&#10;    public void setSpeed(int speed) {&#10;        this.speed = speed;&#10;    }&#10;&#10;    public void performSwimming(OutdoorRecreationalActivity activity) {&#10;        if (activity == null) {&#10;            return;&#10;        }&#10;&#10;        if (activity.getLocation() != null &amp;&amp; activity.getLocation().toLowerCase().contains(&quot;water&quot;)) {&#10;            int newMoodLevel = Math.min(10, getMoodLevel() + 4);&#10;            setMoodLevel(newMoodLevel);&#10;&#10;            int newHealthLevel = Math.min(10, getHealthLevel() + 2);&#10;            setHealthLevel(newHealthLevel);&#10;        } else {&#10;            int newMoodLevel = Math.min(10, getMoodLevel() + 1);&#10;            setMoodLevel(newMoodLevel);&#10;        }&#10;&#10;        int newHungerLevel = Math.min(10, getHungerLevel() + 1);&#10;        setHungerLevel(newHungerLevel);&#10;    }&#10;&#10;    @Override&#10;    public void sound() {&#10;        System.out.println(&quot;*Quack Quack*&quot;);&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Duck:  &quot; + &quot;\n\n&quot; +&#10;                super.toString() +&#10;                &quot;speed  =  &quot; + speed + &quot; km/h\n\n&quot;;&#10;    }&#10;&#10;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>